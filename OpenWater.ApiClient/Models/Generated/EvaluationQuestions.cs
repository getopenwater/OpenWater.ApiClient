//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.1.2.0 (NJsonSchema v10.0.24.0 (Newtonsoft.Json v9.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

using OpenWater.ApiClient.Definitions;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."

namespace OpenWater.ApiClient.EvaluationQuestions
{
    using System = global::System;
    
    

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class CheckboxListQuestionModel : ListQuestionModelBase
    {
        public CheckboxListQuestionModel() { }
    
        [Newtonsoft.Json.JsonConstructor]
        public CheckboxListQuestionModel(string alias, string customCssClass, string instructions, System.Collections.Generic.ICollection<ListValueModel> listValues, string name, bool required, int sortOrder, double weight, int? maxSelectedValueCount = null, int? minSelectedValueCount = null)
            : base(alias, customCssClass, instructions, listValues, name, required, sortOrder, weight)
        {
              MinSelectedValueCount = @minSelectedValueCount;
              MaxSelectedValueCount = @maxSelectedValueCount;
        }
    
        [Newtonsoft.Json.JsonProperty("minSelectedValueCount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? MinSelectedValueCount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("maxSelectedValueCount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? MaxSelectedValueCount { get; set; }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public abstract partial class EvaluationQuestionModelBase 
    {
        public EvaluationQuestionModelBase() { }
    
        [Newtonsoft.Json.JsonConstructor]
        protected EvaluationQuestionModelBase(string alias, string customCssClass, string instructions, string name, bool required, int sortOrder)
        {
              Alias = @alias;
              Required = @required;
              SortOrder = @sortOrder;
              Name = @name;
              Instructions = @instructions;
              CustomCssClass = @customCssClass;
        }
    
        [Newtonsoft.Json.JsonProperty("alias", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Alias { get; set; }
    
        [Newtonsoft.Json.JsonProperty("required", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Required { get; set; }
    
        [Newtonsoft.Json.JsonProperty("sortOrder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int SortOrder { get; set; }
    
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("instructions", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Instructions { get; set; }
    
        [Newtonsoft.Json.JsonProperty("customCssClass", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CustomCssClass { get; set; }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class FileUploadQuestionModel : EvaluationQuestionModelBase
    {
        public FileUploadQuestionModel() { }
    
        [Newtonsoft.Json.JsonConstructor]
        public FileUploadQuestionModel(string alias, string allowedFileExtensions, string customCssClass, string instructions, string name, bool required, bool showAudioPreview, bool showDocumentPreview, bool showImagePreview, bool showVideoPreview, int sortOrder)
            : base(alias, customCssClass, instructions, name, required, sortOrder)
        {
              ShowAudioPreview = @showAudioPreview;
              ShowImagePreview = @showImagePreview;
              ShowVideoPreview = @showVideoPreview;
              ShowDocumentPreview = @showDocumentPreview;
              AllowedFileExtensions = @allowedFileExtensions;
        }
    
        [Newtonsoft.Json.JsonProperty("showAudioPreview", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool ShowAudioPreview { get; set; }
    
        [Newtonsoft.Json.JsonProperty("showImagePreview", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool ShowImagePreview { get; set; }
    
        [Newtonsoft.Json.JsonProperty("showVideoPreview", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool ShowVideoPreview { get; set; }
    
        [Newtonsoft.Json.JsonProperty("showDocumentPreview", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool ShowDocumentPreview { get; set; }
    
        [Newtonsoft.Json.JsonProperty("allowedFileExtensions", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string AllowedFileExtensions { get; set; }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class FreeTextQuestionModel : EvaluationQuestionModelBase
    {
        public FreeTextQuestionModel() { }
    
        [Newtonsoft.Json.JsonConstructor]
        public FreeTextQuestionModel(string alias, string customCssClass, string instructions, string name, bool required, int sortOrder)
            : base(alias, customCssClass, instructions, name, required, sortOrder)
        {
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class ListQuestionModel : ListQuestionModelBase
    {
        public ListQuestionModel() { }
    
        [Newtonsoft.Json.JsonConstructor]
        public ListQuestionModel(string alias, string customCssClass, string instructions, System.Collections.Generic.ICollection<ListValueModel> listValues, string name, bool required, int sortOrder, double weight)
            : base(alias, customCssClass, instructions, listValues, name, required, sortOrder, weight)
        {
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public abstract partial class ListQuestionModelBase : EvaluationQuestionModelBase
    {
        public ListQuestionModelBase() { }
    
        [Newtonsoft.Json.JsonConstructor]
        protected ListQuestionModelBase(string alias, string customCssClass, string instructions, System.Collections.Generic.ICollection<ListValueModel> listValues, string name, bool required, int sortOrder, double weight)
            : base(alias, customCssClass, instructions, name, required, sortOrder)
        {
              Weight = @weight;
              ListValues = @listValues;
        }
    
        [Newtonsoft.Json.JsonProperty("weight", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Weight { get; set; }
    
        [Newtonsoft.Json.JsonProperty("listValues", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ListValueModel> ListValues { get; set; }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class ListValueModel 
    {
        public ListValueModel() { }
    
        [Newtonsoft.Json.JsonConstructor]
        public ListValueModel(double score, string text)
        {
              Text = @text;
              Score = @score;
        }
    
        [Newtonsoft.Json.JsonProperty("text", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Text { get; set; }
    
        [Newtonsoft.Json.JsonProperty("score", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Score { get; set; }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class NumericQuestionModel : EvaluationQuestionModelBase
    {
        public NumericQuestionModel() { }
    
        [Newtonsoft.Json.JsonConstructor]
        public NumericQuestionModel(string alias, string customCssClass, string instructions, string name, bool required, int sortOrder, double weight, double? maxValue = null, double? minValue = null)
            : base(alias, customCssClass, instructions, name, required, sortOrder)
        {
              MinValue = @minValue;
              MaxValue = @maxValue;
              Weight = @weight;
        }
    
        [Newtonsoft.Json.JsonProperty("minValue", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? MinValue { get; set; }
    
        [Newtonsoft.Json.JsonProperty("maxValue", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? MaxValue { get; set; }
    
        [Newtonsoft.Json.JsonProperty("weight", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Weight { get; set; }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class SeparatorQuestionModel : EvaluationQuestionModelBase
    {
        public SeparatorQuestionModel() { }
    
        [Newtonsoft.Json.JsonConstructor]
        public SeparatorQuestionModel(string alias, string customCssClass, string instructions, string name, bool required, int sortOrder)
            : base(alias, customCssClass, instructions, name, required, sortOrder)
        {
        }
    
    
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.1.2.0 (NJsonSchema v10.0.24.0 (Newtonsoft.Json v9.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."

namespace OpenWater.ApiClient.Fields
{
    using System = global::System;
    
    

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum SubmissionStatus
    {
        [System.Runtime.Serialization.EnumMember(Value = @"NotStarted")]
        NotStarted = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Incomplete")]
        Incomplete = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"PendingApproval")]
        PendingApproval = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Complete")]
        Complete = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Disapproved")]
        Disapproved = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"InCart")]
        InCart = 5,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum JudgeScorecardStatus
    {
        [System.Runtime.Serialization.EnumMember(Value = @"NotScored")]
        NotScored = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Started")]
        Started = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Complete")]
        Complete = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum StateType
    {
        [System.Runtime.Serialization.EnumMember(Value = @"Undefined")]
        Undefined = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Uncommited")]
        Uncommited = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Awaiting")]
        Awaiting = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Scheduled")]
        Scheduled = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Enqueued")]
        Enqueued = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Processing")]
        Processing = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Succeeded")]
        Succeeded = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Deleted")]
        Deleted = 7,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Failed")]
        Failed = 8,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum BillingLineItemTargetType
    {
        [System.Runtime.Serialization.EnumMember(Value = @"None")]
        None = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Coupon")]
        Coupon = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"ApplicationJudgement")]
        ApplicationJudgement = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Submission")]
        Submission = 3,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum PaymentMethod
    {
        [System.Runtime.Serialization.EnumMember(Value = @"None")]
        None = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Check")]
        Check = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"OnSite")]
        OnSite = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"CreditCard")]
        CreditCard = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"PayPalExpress")]
        PayPalExpress = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"TouchNet")]
        TouchNet = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"ChasePaymentech")]
        ChasePaymentech = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = @"StripeJs")]
        StripeJs = 7,
    
        [System.Runtime.Serialization.EnumMember(Value = @"QuickPay")]
        QuickPay = 8,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public abstract partial class FieldModelBase 
    {
        internal FieldModelBase() { }
    
        [Newtonsoft.Json.JsonConstructor]
        protected FieldModelBase(string alias, string name, bool isDescriptionWysiwyg, string description, bool hidden, bool required, string customCssClass, FieldVisibilityConditionModel visibilityCondition, int? sortOrder = null)
        {
              Alias = @alias;
              Name = @name;
              IsDescriptionWysiwyg = @isDescriptionWysiwyg;
              Description = @description;
              Hidden = @hidden;
              Required = @required;
              SortOrder = @sortOrder;
              CustomCssClass = @customCssClass;
              VisibilityCondition = @visibilityCondition;
            }
    
        [Newtonsoft.Json.JsonProperty("alias", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Alias { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Name { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("isDescriptionWysiwyg", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool IsDescriptionWysiwyg { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Description { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("hidden", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Hidden { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("required", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Required { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("sortOrder", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? SortOrder { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("customCssClass", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CustomCssClass { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("visibilityCondition", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public FieldVisibilityConditionModel VisibilityCondition { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("typeName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string TypeName { get; internal set; }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class FieldVisibilityConditionModel 
    {
        internal FieldVisibilityConditionModel() { }
    
        [Newtonsoft.Json.JsonConstructor]
        public FieldVisibilityConditionModel(string fieldAlias, System.Guid selectedListValueId)
        {
              FieldAlias = @fieldAlias;
              SelectedListValueId = @selectedListValueId;
        }
    
        [Newtonsoft.Json.JsonProperty("fieldAlias", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string FieldAlias { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("selectedListValueId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid SelectedListValueId { get; internal set; }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class AddressFieldModel : FieldModelBase
    {
        internal AddressFieldModel() { }
    
        [Newtonsoft.Json.JsonConstructor]
        public AddressFieldModel(string alias, string name, bool isDescriptionWysiwyg, string description, bool hidden, bool required, string customCssClass, FieldVisibilityConditionModel visibilityCondition, int? sortOrder = null)
            : base(alias, name, isDescriptionWysiwyg, description, hidden, required, customCssClass, visibilityCondition, sortOrder)
        {
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class ApplicationCategoryFieldModel : FieldModelBase
    {
        internal ApplicationCategoryFieldModel() { }
    
        [Newtonsoft.Json.JsonConstructor]
        public ApplicationCategoryFieldModel(System.Collections.Generic.ICollection<SubmissionForm.Category> categories, string alias, string name, bool isDescriptionWysiwyg, string description, bool hidden, bool required, string customCssClass, FieldVisibilityConditionModel visibilityCondition, int? sortOrder = null)
            : base(alias, name, isDescriptionWysiwyg, description, hidden, required, customCssClass, visibilityCondition, sortOrder)
        {
              Categories = @categories;
        }
    
        [Newtonsoft.Json.JsonProperty("categories", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SubmissionForm.Category> Categories { get; internal set; }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class ApplicationNameFieldModel : FieldModelBase
    {
        internal ApplicationNameFieldModel() { }
    
        [Newtonsoft.Json.JsonConstructor]
        public ApplicationNameFieldModel(bool isOneTextField, string firstTitle, string secondTitle, ApplicationNameFieldModelTextLengthCountMode textLengthCountMode, string alias, string name, bool isDescriptionWysiwyg, string description, bool hidden, bool required, string customCssClass, FieldVisibilityConditionModel visibilityCondition, int? minLength = null, int? maxLength = null, int? sortOrder = null)
            : base(alias, name, isDescriptionWysiwyg, description, hidden, required, customCssClass, visibilityCondition, sortOrder)
        {
              IsOneTextField = @isOneTextField;
              FirstTitle = @firstTitle;
              SecondTitle = @secondTitle;
              TextLengthCountMode = @textLengthCountMode;
              MinLength = @minLength;
              MaxLength = @maxLength;
        }
    
        [Newtonsoft.Json.JsonProperty("isOneTextField", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool IsOneTextField { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("firstTitle", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string FirstTitle { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("secondTitle", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string SecondTitle { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("textLengthCountMode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ApplicationNameFieldModelTextLengthCountMode TextLengthCountMode { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("minLength", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? MinLength { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("maxLength", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? MaxLength { get; internal set; }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class CheckboxListFieldModel : FieldModelBase
    {
        internal CheckboxListFieldModel() { }
    
        [Newtonsoft.Json.JsonConstructor]
        public CheckboxListFieldModel(System.Collections.Generic.ICollection<Form.ListValue> listValues, string alias, string name, bool isDescriptionWysiwyg, string description, bool hidden, bool required, string customCssClass, FieldVisibilityConditionModel visibilityCondition, int? minSelectedValueCount = null, int? maxSelectedValueCount = null, int? sortOrder = null)
            : base(alias, name, isDescriptionWysiwyg, description, hidden, required, customCssClass, visibilityCondition, sortOrder)
        {
              MinSelectedValueCount = @minSelectedValueCount;
              MaxSelectedValueCount = @maxSelectedValueCount;
              ListValues = @listValues;
        }
    
        [Newtonsoft.Json.JsonProperty("minSelectedValueCount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? MinSelectedValueCount { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("maxSelectedValueCount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? MaxSelectedValueCount { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("listValues", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Form.ListValue> ListValues { get; internal set; }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class DateFieldModel : FieldModelBase
    {
        internal DateFieldModel() { }
    
        [Newtonsoft.Json.JsonConstructor]
        public DateFieldModel(string alias, string name, bool isDescriptionWysiwyg, string description, bool hidden, bool required, string customCssClass, FieldVisibilityConditionModel visibilityCondition, System.DateTimeOffset? minValueUtc = null, System.DateTimeOffset? maxValueUtc = null, int? sortOrder = null)
            : base(alias, name, isDescriptionWysiwyg, description, hidden, required, customCssClass, visibilityCondition, sortOrder)
        {
              MinValueUtc = @minValueUtc;
              MaxValueUtc = @maxValueUtc;
        }
    
        [Newtonsoft.Json.JsonProperty("minValueUtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? MinValueUtc { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("maxValueUtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? MaxValueUtc { get; internal set; }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class DigitalSignatureFieldModel : FieldModelBase
    {
        internal DigitalSignatureFieldModel() { }
    
        [Newtonsoft.Json.JsonConstructor]
        public DigitalSignatureFieldModel(string alias, string name, bool isDescriptionWysiwyg, string description, bool hidden, bool required, string customCssClass, FieldVisibilityConditionModel visibilityCondition, int? sortOrder = null)
            : base(alias, name, isDescriptionWysiwyg, description, hidden, required, customCssClass, visibilityCondition, sortOrder)
        {
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class DropDownListFieldModel : FieldModelBase
    {
        internal DropDownListFieldModel() { }
    
        [Newtonsoft.Json.JsonConstructor]
        public DropDownListFieldModel(DropDownListFieldModelPreFillType preFillType, System.Collections.Generic.ICollection<Form.ListValue> listValues, string alias, string name, bool isDescriptionWysiwyg, string description, bool hidden, bool required, string customCssClass, FieldVisibilityConditionModel visibilityCondition, int? sortOrder = null)
            : base(alias, name, isDescriptionWysiwyg, description, hidden, required, customCssClass, visibilityCondition, sortOrder)
        {
              PreFillType = @preFillType;
              ListValues = @listValues;
        }
    
        [Newtonsoft.Json.JsonProperty("preFillType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public DropDownListFieldModelPreFillType PreFillType { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("listValues", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Form.ListValue> ListValues { get; internal set; }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class EmailFieldModel : FieldModelBase
    {
        internal EmailFieldModel() { }
    
        [Newtonsoft.Json.JsonConstructor]
        public EmailFieldModel(bool confirmationRequired, EmailFieldModelTextLengthCountMode textLengthCountMode, EmailFieldModelSize size, string alias, string name, bool isDescriptionWysiwyg, string description, bool hidden, bool required, string customCssClass, FieldVisibilityConditionModel visibilityCondition, int? minLength = null, int? maxLength = null, int? sortOrder = null)
            : base(alias, name, isDescriptionWysiwyg, description, hidden, required, customCssClass, visibilityCondition, sortOrder)
        {
              ConfirmationRequired = @confirmationRequired;
              TextLengthCountMode = @textLengthCountMode;
              MinLength = @minLength;
              MaxLength = @maxLength;
              Size = @size;
        }
    
        [Newtonsoft.Json.JsonProperty("confirmationRequired", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool ConfirmationRequired { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("textLengthCountMode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public EmailFieldModelTextLengthCountMode TextLengthCountMode { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("minLength", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? MinLength { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("maxLength", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? MaxLength { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("size", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public EmailFieldModelSize Size { get; internal set; }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class FileUploadFieldModel : FieldModelBase
    {
        internal FileUploadFieldModel() { }
    
        [Newtonsoft.Json.JsonConstructor]
        public FileUploadFieldModel(bool showCaption, string customCssClass, bool required, bool hidden, string description, bool isDescriptionWysiwyg, string name, FieldVisibilityConditionModel visibilityCondition, string alias, string allowedFileExtensions, bool showDocumentPreview, bool showVideoPreview, bool showImagePreview, bool showAudioPreview, string captionLabel, int? maxFileSize = null, int? sortOrder = null)
            : base(alias, name, isDescriptionWysiwyg, description, hidden, required, customCssClass, visibilityCondition, sortOrder)
        {
              ShowCaption = @showCaption;
              ShowAudioPreview = @showAudioPreview;
              ShowImagePreview = @showImagePreview;
              ShowVideoPreview = @showVideoPreview;
              ShowDocumentPreview = @showDocumentPreview;
              MaxFileSize = @maxFileSize;
              AllowedFileExtensions = @allowedFileExtensions;
              CaptionLabel = @captionLabel;
        }
    
        [Newtonsoft.Json.JsonProperty("showCaption", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool ShowCaption { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("showAudioPreview", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool ShowAudioPreview { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("showImagePreview", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool ShowImagePreview { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("showVideoPreview", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool ShowVideoPreview { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("showDocumentPreview", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool ShowDocumentPreview { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("maxFileSize", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? MaxFileSize { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("allowedFileExtensions", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string AllowedFileExtensions { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("captionLabel", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CaptionLabel { get; internal set; }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class ImisNumberFieldModel : FieldModelBase
    {
        internal ImisNumberFieldModel() { }
    
        [Newtonsoft.Json.JsonConstructor]
        public ImisNumberFieldModel(string alias, string name, bool isDescriptionWysiwyg, string description, bool hidden, bool required, string customCssClass, FieldVisibilityConditionModel visibilityCondition, int? sortOrder = null)
            : base(alias, name, isDescriptionWysiwyg, description, hidden, required, customCssClass, visibilityCondition, sortOrder)
        {
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class LetterOfRecommendationFieldModel : FieldModelBase
    {
        internal LetterOfRecommendationFieldModel() { }
    
        [Newtonsoft.Json.JsonConstructor]
        public LetterOfRecommendationFieldModel(bool allowToSendRequestPriorToFinalization, string customCssClass, bool required, bool hidden, string description, bool isDescriptionWysiwyg, FieldVisibilityConditionModel visibilityCondition, string name, System.Collections.Generic.ICollection<FieldModelBase> fields, string confirmationPageHtml, string instructionsHtml, bool allowReceiveRecommendationAfterSubmissionPeriodEnds, bool allowSubmitterToDeleteRecommendationOnIncompleteSubmission, bool allowSubmitterToViewCompletedRecommendation, string alias, int? sortOrder = null)
            : base(alias, name, isDescriptionWysiwyg, description, hidden, required, customCssClass, visibilityCondition, sortOrder)
        {
              AllowToSendRequestPriorToFinalization = @allowToSendRequestPriorToFinalization;
              AllowSubmitterToViewCompletedRecommendation = @allowSubmitterToViewCompletedRecommendation;
              AllowSubmitterToDeleteRecommendationOnIncompleteSubmission = @allowSubmitterToDeleteRecommendationOnIncompleteSubmission;
              AllowReceiveRecommendationAfterSubmissionPeriodEnds = @allowReceiveRecommendationAfterSubmissionPeriodEnds;
              InstructionsHtml = @instructionsHtml;
              ConfirmationPageHtml = @confirmationPageHtml;
              Fields = @fields;
        }
    
        [Newtonsoft.Json.JsonProperty("allowToSendRequestPriorToFinalization", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool AllowToSendRequestPriorToFinalization { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("allowSubmitterToViewCompletedRecommendation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool AllowSubmitterToViewCompletedRecommendation { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("allowSubmitterToDeleteRecommendationOnIncompleteSubmission", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool AllowSubmitterToDeleteRecommendationOnIncompleteSubmission { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("allowReceiveRecommendationAfterSubmissionPeriodEnds", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool AllowReceiveRecommendationAfterSubmissionPeriodEnds { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("instructionsHtml", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string InstructionsHtml { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("confirmationPageHtml", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ConfirmationPageHtml { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("fields", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<FieldModelBase> Fields { get; internal set; }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class MultilineTextFieldModel : FieldModelBase
    {
        internal MultilineTextFieldModel() { }
    
        [Newtonsoft.Json.JsonConstructor]
        public MultilineTextFieldModel(bool isWysiwyg, string allowedHtmlTags, MultilineTextFieldModelTextLengthCountMode textLengthCountMode, MultilineTextFieldModelSize size, string alias, string name, bool isDescriptionWysiwyg, string description, bool hidden, bool required, string customCssClass, FieldVisibilityConditionModel visibilityCondition, int? minLength = null, int? maxLength = null, int? sortOrder = null)
            : base(alias, name, isDescriptionWysiwyg, description, hidden, required, customCssClass, visibilityCondition, sortOrder)
        {
              IsWysiwyg = @isWysiwyg;
              AllowedHtmlTags = @allowedHtmlTags;
              TextLengthCountMode = @textLengthCountMode;
              MinLength = @minLength;
              MaxLength = @maxLength;
              Size = @size;
        }
    
        [Newtonsoft.Json.JsonProperty("isWysiwyg", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool IsWysiwyg { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("allowedHtmlTags", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string AllowedHtmlTags { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("textLengthCountMode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public MultilineTextFieldModelTextLengthCountMode TextLengthCountMode { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("minLength", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? MinLength { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("maxLength", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? MaxLength { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("size", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public MultilineTextFieldModelSize Size { get; internal set; }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class NumberFieldModel : FieldModelBase
    {
        internal NumberFieldModel() { }
    
        [Newtonsoft.Json.JsonConstructor]
        public NumberFieldModel(string format, string alias, string name, bool isDescriptionWysiwyg, string description, bool hidden, bool required, string customCssClass, FieldVisibilityConditionModel visibilityCondition, double? minValue = null, double? maxValue = null, int? maxPrecision = null, int? sortOrder = null)
            : base(alias, name, isDescriptionWysiwyg, description, hidden, required, customCssClass, visibilityCondition, sortOrder)
        {
              MinValue = @minValue;
              MaxValue = @maxValue;
              MaxPrecision = @maxPrecision;
              Format = @format;
        }
    
        [Newtonsoft.Json.JsonProperty("minValue", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? MinValue { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("maxValue", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? MaxValue { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("maxPrecision", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? MaxPrecision { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("format", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Format { get; internal set; }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class RadioListFieldModel : FieldModelBase
    {
        internal RadioListFieldModel() { }
    
        [Newtonsoft.Json.JsonConstructor]
        public RadioListFieldModel(System.Collections.Generic.ICollection<Form.ListValue> listValues, string alias, string name, bool isDescriptionWysiwyg, string description, bool hidden, bool required, string customCssClass, FieldVisibilityConditionModel visibilityCondition, int? sortOrder = null)
            : base(alias, name, isDescriptionWysiwyg, description, hidden, required, customCssClass, visibilityCondition, sortOrder)
        {
              ListValues = @listValues;
        }
    
        [Newtonsoft.Json.JsonProperty("listValues", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Form.ListValue> ListValues { get; internal set; }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class SeparatorFieldModel : FieldModelBase
    {
        internal SeparatorFieldModel() { }
    
        [Newtonsoft.Json.JsonConstructor]
        public SeparatorFieldModel(string alias, string name, bool isDescriptionWysiwyg, string description, bool hidden, bool required, string customCssClass, FieldVisibilityConditionModel visibilityCondition, int? sortOrder = null)
            : base(alias, name, isDescriptionWysiwyg, description, hidden, required, customCssClass, visibilityCondition, sortOrder)
        {
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class SessionNameFieldModel : FieldModelBase
    {
        internal SessionNameFieldModel() { }
    
        [Newtonsoft.Json.JsonConstructor]
        public SessionNameFieldModel(string alias, string name, bool isDescriptionWysiwyg, string description, bool hidden, bool required, string customCssClass, FieldVisibilityConditionModel visibilityCondition, int? sortOrder = null)
            : base(alias, name, isDescriptionWysiwyg, description, hidden, required, customCssClass, visibilityCondition, sortOrder)
        {
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class TableFieldModel : FieldModelBase
    {
        internal TableFieldModel() { }
    
        [Newtonsoft.Json.JsonConstructor]
        public TableFieldModel(string rowName, string rowNamePlural, string rowTemplate, int minRowCount, int maxRowCount, System.Collections.Generic.ICollection<FieldModelBase> fields, string alias, string name, bool isDescriptionWysiwyg, string description, bool hidden, bool required, string customCssClass, FieldVisibilityConditionModel visibilityCondition, int? sortOrder = null)
            : base(alias, name, isDescriptionWysiwyg, description, hidden, required, customCssClass, visibilityCondition, sortOrder)
        {
              RowName = @rowName;
              RowNamePlural = @rowNamePlural;
              RowTemplate = @rowTemplate;
              MinRowCount = @minRowCount;
              MaxRowCount = @maxRowCount;
              Fields = @fields;
        }
    
        [Newtonsoft.Json.JsonProperty("rowName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string RowName { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("rowNamePlural", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string RowNamePlural { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("rowTemplate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string RowTemplate { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("minRowCount", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int MinRowCount { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("maxRowCount", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int MaxRowCount { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("fields", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<FieldModelBase> Fields { get; internal set; }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class TextFieldModel : FieldModelBase
    {
        internal TextFieldModel() { }
    
        [Newtonsoft.Json.JsonConstructor]
        public TextFieldModel(TextFieldModelTextLengthCountMode textLengthCountMode, TextFieldModelSize size, string alias, string name, bool isDescriptionWysiwyg, string description, bool hidden, bool required, string customCssClass, FieldVisibilityConditionModel visibilityCondition, int? minLength = null, int? maxLength = null, int? sortOrder = null)
            : base(alias, name, isDescriptionWysiwyg, description, hidden, required, customCssClass, visibilityCondition, sortOrder)
        {
              TextLengthCountMode = @textLengthCountMode;
              MinLength = @minLength;
              MaxLength = @maxLength;
              Size = @size;
        }
    
        [Newtonsoft.Json.JsonProperty("textLengthCountMode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public TextFieldModelTextLengthCountMode TextLengthCountMode { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("minLength", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? MinLength { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("maxLength", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? MaxLength { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("size", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public TextFieldModelSize Size { get; internal set; }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class UrlFieldModel : FieldModelBase
    {
        internal UrlFieldModel() { }
    
        [Newtonsoft.Json.JsonConstructor]
        public UrlFieldModel(UrlFieldModelTextLengthCountMode textLengthCountMode, UrlFieldModelSize size, string alias, string name, bool isDescriptionWysiwyg, string description, bool hidden, bool required, string customCssClass, FieldVisibilityConditionModel visibilityCondition, int? minLength = null, int? maxLength = null, int? sortOrder = null)
            : base(alias, name, isDescriptionWysiwyg, description, hidden, required, customCssClass, visibilityCondition, sortOrder)
        {
              TextLengthCountMode = @textLengthCountMode;
              MinLength = @minLength;
              MaxLength = @maxLength;
              Size = @size;
        }
    
        [Newtonsoft.Json.JsonProperty("textLengthCountMode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public UrlFieldModelTextLengthCountMode TextLengthCountMode { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("minLength", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? MinLength { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("maxLength", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? MaxLength { get; internal set; }
    
        [Newtonsoft.Json.JsonProperty("size", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public UrlFieldModelSize Size { get; internal set; }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum ApplicationNameFieldModelTextLengthCountMode
    {
        [System.Runtime.Serialization.EnumMember(Value = @"Characters")]
        Characters = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Words")]
        Words = 1,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum DropDownListFieldModelPreFillType
    {
        [System.Runtime.Serialization.EnumMember(Value = @"None")]
        None = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"UsStates")]
        UsStates = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"CanadaProvinces")]
        CanadaProvinces = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Countries")]
        Countries = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"UsStatesAndCanadaProvinces")]
        UsStatesAndCanadaProvinces = 4,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum EmailFieldModelTextLengthCountMode
    {
        [System.Runtime.Serialization.EnumMember(Value = @"Characters")]
        Characters = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Words")]
        Words = 1,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum EmailFieldModelSize
    {
        [System.Runtime.Serialization.EnumMember(Value = @"Large")]
        Large = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Medium")]
        Medium = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Small")]
        Small = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum MultilineTextFieldModelTextLengthCountMode
    {
        [System.Runtime.Serialization.EnumMember(Value = @"Characters")]
        Characters = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Words")]
        Words = 1,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum MultilineTextFieldModelSize
    {
        [System.Runtime.Serialization.EnumMember(Value = @"Large")]
        Large = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Medium")]
        Medium = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Small")]
        Small = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum TextFieldModelTextLengthCountMode
    {
        [System.Runtime.Serialization.EnumMember(Value = @"Characters")]
        Characters = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Words")]
        Words = 1,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum TextFieldModelSize
    {
        [System.Runtime.Serialization.EnumMember(Value = @"Large")]
        Large = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Medium")]
        Medium = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Small")]
        Small = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum UrlFieldModelTextLengthCountMode
    {
        [System.Runtime.Serialization.EnumMember(Value = @"Characters")]
        Characters = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Words")]
        Words = 1,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum UrlFieldModelSize
    {
        [System.Runtime.Serialization.EnumMember(Value = @"Large")]
        Large = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Medium")]
        Medium = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Small")]
        Small = 2,
    
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
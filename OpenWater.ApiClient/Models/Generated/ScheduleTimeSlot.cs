//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.1.2.0 (NJsonSchema v10.0.24.0 (Newtonsoft.Json v9.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

using OpenWater.ApiClient.Definitions;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."

namespace OpenWater.ApiClient.ScheduleTimeSlot
{
    using System = global::System;
    
    

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class ScheduleTimeSlotListItemModel 
    {
        public ScheduleTimeSlotListItemModel() { }
    
        [Newtonsoft.Json.JsonConstructor]
        public ScheduleTimeSlotListItemModel(System.Collections.Generic.ICollection<int> availableOnlyInDayIds, string code, string endTime, int id, string name, string startTime)
        {
              Id = @id;
              Name = @name;
              Code = @code;
              StartTime = @startTime;
              EndTime = @endTime;
              AvailableOnlyInDayIds = @availableOnlyInDayIds;
        }
    
        /// <summary>Schedule time slot Id</summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Id { get; set; }
    
        /// <summary>Schedule time slot name</summary>
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Name { get; set; }
    
        /// <summary>Schedule time slot code</summary>
        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Code { get; set; }
    
        /// <summary>Schedule time slot start time</summary>
        [Newtonsoft.Json.JsonProperty("startTime", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string StartTime { get; set; }
    
        /// <summary>Schedule time slot end time</summary>
        [Newtonsoft.Json.JsonProperty("endTime", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string EndTime { get; set; }
    
        /// <summary>Schedule day Ids where time slot is available (available in all days if NULL or empty)</summary>
        [Newtonsoft.Json.JsonProperty("availableOnlyInDayIds", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<int> AvailableOnlyInDayIds { get; set; }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class CreateRequest 
    {
        public CreateRequest() { }
    
        [Newtonsoft.Json.JsonConstructor]
        public CreateRequest(string code, string endTime, string name, System.Collections.Generic.ICollection<int> scheduleDayIds, string startTime)
        {
              Name = @name;
              Code = @code;
              StartTime = @startTime;
              EndTime = @endTime;
              ScheduleDayIds = @scheduleDayIds;
        }
    
        /// <summary>Name</summary>
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        public string Name { get; set; }
    
        /// <summary>Code</summary>
        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Always)]
        public string Code { get; set; }
    
        /// <summary>Start time</summary>
        [Newtonsoft.Json.JsonProperty("startTime", Required = Newtonsoft.Json.Required.Always)]
        public string StartTime { get; set; }
    
        /// <summary>End time</summary>
        [Newtonsoft.Json.JsonProperty("endTime", Required = Newtonsoft.Json.Required.Always)]
        public string EndTime { get; set; }
    
        /// <summary>Available only in certain schedule days. Leave empty to make it available in all days.</summary>
        [Newtonsoft.Json.JsonProperty("scheduleDayIds", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.Generic.ICollection<int> ScheduleDayIds { get; set; }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class CreateResponse 
    {
        public CreateResponse() { }
    
        [Newtonsoft.Json.JsonConstructor]
        public CreateResponse(int id)
        {
              Id = @id;
        }
    
        /// <summary>Schedule time slot id</summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Id { get; set; }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class UpdateRequest 
    {
        public UpdateRequest() { }
    
        [Newtonsoft.Json.JsonConstructor]
        public UpdateRequest(string code, string endTime, string name, System.Collections.Generic.ICollection<int> scheduleDayIds, string startTime)
        {
              Name = @name;
              Code = @code;
              StartTime = @startTime;
              EndTime = @endTime;
              ScheduleDayIds = @scheduleDayIds;
        }
    
        /// <summary>Name</summary>
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        public string Name { get; set; }
    
        /// <summary>Code</summary>
        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Always)]
        public string Code { get; set; }
    
        /// <summary>Start time</summary>
        [Newtonsoft.Json.JsonProperty("startTime", Required = Newtonsoft.Json.Required.Always)]
        public string StartTime { get; set; }
    
        /// <summary>End time</summary>
        [Newtonsoft.Json.JsonProperty("endTime", Required = Newtonsoft.Json.Required.Always)]
        public string EndTime { get; set; }
    
        /// <summary>Available only in certain schedule days. Leave empty to make it available in all days.</summary>
        [Newtonsoft.Json.JsonProperty("scheduleDayIds", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.Generic.ICollection<int> ScheduleDayIds { get; set; }
    
    
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
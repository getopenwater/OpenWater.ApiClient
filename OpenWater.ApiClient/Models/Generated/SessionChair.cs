//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.1.2.0 (NJsonSchema v10.0.24.0 (Newtonsoft.Json v9.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

using OpenWater.ApiClient.Definitions;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."

namespace OpenWater.ApiClient.SessionChair
{
    using System = global::System;
    
    

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class ChangeTypeRequest 
    {
        public ChangeTypeRequest() { }
    
        [Newtonsoft.Json.JsonConstructor]
        public ChangeTypeRequest(int sessionChairId, SessionChairType sessionChairType)
        {
              SessionChairId = @sessionChairId;
              SessionChairType = @sessionChairType;
        }
    
        /// <summary>Session chair id</summary>
        [Newtonsoft.Json.JsonProperty("sessionChairId", Required = Newtonsoft.Json.Required.Always)]
        public int SessionChairId { get; set; }
    
        /// <summary>Session chair type</summary>
        [Newtonsoft.Json.JsonProperty("sessionChairType", Required = Newtonsoft.Json.Required.Always)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public SessionChairType SessionChairType { get; set; }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.24.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class CreateRequest 
    {
        public CreateRequest() { }
    
        [Newtonsoft.Json.JsonConstructor]
        public CreateRequest(int sessionId, int userId)
        {
              SessionId = @sessionId;
              UserId = @userId;
        }
    
        /// <summary>Session id</summary>
        [Newtonsoft.Json.JsonProperty("sessionId", Required = Newtonsoft.Json.Required.Always)]
        public int SessionId { get; set; }
    
        /// <summary>User id</summary>
        [Newtonsoft.Json.JsonProperty("userId", Required = Newtonsoft.Json.Required.Always)]
        public int UserId { get; set; }
    
    
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108